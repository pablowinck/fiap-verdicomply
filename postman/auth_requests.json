[
  {
    "name": "Login - Sucesso (Admin)",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"username\": \"{{admin_username}}\",\n    \"password\": \"{{admin_password}}\"\n}"
      },
      "url": {
        "raw": "{{host}}/api/public/auth/login",
        "host": ["{{host}}"],
        "path": ["api", "public", "auth", "login"]
      },
      "description": "Login com credenciais de administrador válidas."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta contém token JWT\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('token');",
            "    pm.expect(responseJson.token).to.not.be.empty;",
            "    pm.environment.set('token', responseJson.token);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Login - Falha (Credenciais Inválidas)",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"username\": \"usuario_inexistente\",\n    \"password\": \"senha_incorreta\"\n}"
      },
      "url": {
        "raw": "{{host}}/api/public/auth/login",
        "host": ["{{host}}"],
        "path": ["api", "public", "auth", "login"]
      },
      "description": "Login com credenciais inválidas."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 401\", function () {",
            "    pm.response.to.have.status(401);",
            "});",
            "",
            "pm.test(\"Resposta indica erro de autenticação\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('tipo');",
            "    pm.expect(responseJson.tipo).to.equal('erro');",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Login - Sucesso (Auditor)",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"username\": \"{{auditor_username}}\",\n    \"password\": \"{{auditor_password}}\"\n}"
      },
      "url": {
        "raw": "{{host}}/api/public/auth/login",
        "host": ["{{host}}"],
        "path": ["api", "public", "auth", "login"]
      },
      "description": "Login com credenciais de auditor válidas."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta contém token JWT\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('token');",
            "    pm.expect(responseJson.token).to.not.be.empty;",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Registro - Sucesso",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"username\": \"novo_usuario_{{$timestamp}}\",\n    \"password\": \"senha123\",\n    \"role\": \"AUDITOR\"\n}"
      },
      "url": {
        "raw": "{{host}}/api/public/registro",
        "host": ["{{host}}"],
        "path": ["api", "public", "registro"]
      },
      "description": "Registrar um novo usuário."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 201\", function () {",
            "    pm.response.to.have.status(201);",
            "});",
            "",
            "pm.test(\"Resposta confirma registro de usuário\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('username');",
            "    pm.expect(responseJson).to.have.property('role');",
            "    pm.expect(responseJson).to.have.property('mensagem');",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Registro - Falha (Username Existente)",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"username\": \"{{admin_username}}\",\n    \"password\": \"senha123\",\n    \"role\": \"ADMIN\"\n}"
      },
      "url": {
        "raw": "{{host}}/api/public/registro",
        "host": ["{{host}}"],
        "path": ["api", "public", "registro"]
      },
      "description": "Tentar registrar um usuário com username já existente."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 400 ou 500\", function () {",
            "    pm.expect(pm.response.code).to.be.oneOf([400, 500]);",
            "});"
          ]
        }
      }
    ]
  }
]
