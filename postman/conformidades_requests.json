[
  {
    "name": "Listar Todas Conformidades",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/conformidades",
        "host": ["{{host}}"],
        "path": ["api", "conformidades"]
      },
      "description": "Listar todas as conformidades."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta é um array de conformidades\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(Array.isArray(responseJson)).to.be.true;",
            "    ",
            "    if (responseJson.length > 0) {",
            "        pm.environment.set('last_conformidade_id', responseJson[0].id);",
            "    }",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Conformidade por ID",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/conformidades/{{last_conformidade_id}}",
        "host": ["{{host}}"],
        "path": ["api", "conformidades", "{{last_conformidade_id}}"]
      },
      "description": "Buscar uma conformidade específica pelo ID."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta contém dados da conformidade\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('id');",
            "    pm.expect(responseJson).to.have.property('estaConforme');",
            "    pm.expect(responseJson).to.have.property('descricao');",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Conformidade - ID Inválido",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/conformidades/99999",
        "host": ["{{host}}"],
        "path": ["api", "conformidades", "99999"]
      },
      "description": "Buscar uma conformidade com ID inexistente."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 404 ou 400\", function () {",
            "    pm.expect(pm.response.code).to.be.oneOf([404, 400]);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Criar Conformidade",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"descricao\": \"Conformidade Teste {{$timestamp}}\",\n    \"estaConforme\": true,\n    \"observacoes\": \"Criado via Postman para testes\",\n    \"auditoriaId\": \"{{last_auditoria_id}}\",\n    \"normaAmbientalId\": 1\n}"
      },
      "url": {
        "raw": "{{host}}/api/conformidades",
        "host": ["{{host}}"],
        "path": ["api", "conformidades"]
      },
      "description": "Criar uma nova conformidade."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 201\", function () {",
            "    pm.response.to.have.status(201);",
            "});",
            "",
            "pm.test(\"Resposta contém dados da conformidade criada\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('id');",
            "    pm.environment.set('last_conformidade_id', responseJson.id);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Criar Conformidade - Dados Inválidos",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"descricao\": \"\",\n    \"auditoriaId\": null,\n    \"normaAmbientalId\": null\n}"
      },
      "url": {
        "raw": "{{host}}/api/conformidades",
        "host": ["{{host}}"],
        "path": ["api", "conformidades"]
      },
      "description": "Tentar criar uma conformidade com dados inválidos."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 400\", function () {",
            "    pm.response.to.have.status(400);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Atualizar Conformidade",
    "request": {
      "method": "PUT",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"descricao\": \"Conformidade Atualizada {{$timestamp}}\",\n    \"estaConforme\": false,\n    \"observacoes\": \"Atualizado via Postman para testes\",\n    \"auditoriaId\": \"{{last_auditoria_id}}\",\n    \"normaAmbientalId\": 1\n}"
      },
      "url": {
        "raw": "{{host}}/api/conformidades/{{last_conformidade_id}}",
        "host": ["{{host}}"],
        "path": ["api", "conformidades", "{{last_conformidade_id}}"]
      },
      "description": "Atualizar uma conformidade existente."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta contém dados atualizados\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('estaConforme');",
            "    pm.expect(responseJson.estaConforme).to.equal(false);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Excluir Conformidade",
    "request": {
      "method": "DELETE",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/conformidades/{{last_conformidade_id}}",
        "host": ["{{host}}"],
        "path": ["api", "conformidades", "{{last_conformidade_id}}"]
      },
      "description": "Excluir uma conformidade existente (requer role ADMIN)."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 204\", function () {",
            "    pm.response.to.have.status(204);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Conformidades por Auditoria",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/conformidades/auditoria/{{last_auditoria_id}}",
        "host": ["{{host}}"],
        "path": ["api", "conformidades", "auditoria", "{{last_auditoria_id}}"]
      },
      "description": "Buscar conformidades por auditoria."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta é um array de conformidades\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(Array.isArray(responseJson)).to.be.true;",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Conformidades por Status",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/conformidades/status/true",
        "host": ["{{host}}"],
        "path": ["api", "conformidades", "status", "true"]
      },
      "description": "Buscar conformidades por status de conformidade."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta é um array de conformidades\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(Array.isArray(responseJson)).to.be.true;",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Conformidades por Norma",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/conformidades/norma/1",
        "host": ["{{host}}"],
        "path": ["api", "conformidades", "norma", "1"]
      },
      "description": "Buscar conformidades por norma ambiental."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta é um array de conformidades\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(Array.isArray(responseJson)).to.be.true;",
            "});"
          ]
        }
      }
    ]
  }
]
