[
  {
    "name": "Listar Todas Pendências",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/pendencias",
        "host": ["{{host}}"],
        "path": ["api", "pendencias"]
      },
      "description": "Listar todas as pendências."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta é um array de pendências\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(Array.isArray(responseJson)).to.be.true;",
            "    ",
            "    if (responseJson.length > 0) {",
            "        pm.environment.set('last_pendencia_id', responseJson[0].id);",
            "    }",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Pendência por ID",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/pendencias/{{last_pendencia_id}}",
        "host": ["{{host}}"],
        "path": ["api", "pendencias", "{{last_pendencia_id}}"]
      },
      "description": "Buscar uma pendência específica pelo ID."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta contém dados da pendência\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('id');",
            "    pm.expect(responseJson).to.have.property('descricao');",
            "    pm.expect(responseJson).to.have.property('resolvida');",
            "    pm.expect(responseJson).to.have.property('dataPrazo');",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Pendência - ID Inválido",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/pendencias/99999",
        "host": ["{{host}}"],
        "path": ["api", "pendencias", "99999"]
      },
      "description": "Buscar uma pendência com ID inexistente."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 404 ou 400\", function () {",
            "    pm.expect(pm.response.code).to.be.oneOf([404, 400]);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Criar Pendência",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"descricao\": \"Pendência Teste {{$timestamp}}\",\n    \"resolvida\": false,\n    \"dataPrazo\": \"2025-07-10\",\n    \"conformidadeId\": \"{{last_conformidade_id}}\",\n    \"acaoCorretiva\": \"Ação corretiva a ser implementada\"\n}"
      },
      "url": {
        "raw": "{{host}}/api/pendencias",
        "host": ["{{host}}"],
        "path": ["api", "pendencias"]
      },
      "description": "Criar uma nova pendência."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 201\", function () {",
            "    pm.response.to.have.status(201);",
            "});",
            "",
            "pm.test(\"Resposta contém dados da pendência criada\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('id');",
            "    pm.environment.set('last_pendencia_id', responseJson.id);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Criar Pendência - Dados Inválidos",
    "request": {
      "method": "POST",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"descricao\": \"\",\n    \"dataPrazo\": \"data-invalida\",\n    \"conformidadeId\": null\n}"
      },
      "url": {
        "raw": "{{host}}/api/pendencias",
        "host": ["{{host}}"],
        "path": ["api", "pendencias"]
      },
      "description": "Tentar criar uma pendência com dados inválidos."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 400\", function () {",
            "    pm.response.to.have.status(400);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Atualizar Pendência",
    "request": {
      "method": "PUT",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "body": {
        "mode": "raw",
        "raw": "{\n    \"descricao\": \"Pendência Atualizada {{$timestamp}}\",\n    \"resolvida\": true,\n    \"dataPrazo\": \"2025-07-15\",\n    \"conformidadeId\": \"{{last_conformidade_id}}\",\n    \"acaoCorretiva\": \"Ação corretiva implementada com sucesso\",\n    \"dataResolucao\": \"2025-06-30\"\n}"
      },
      "url": {
        "raw": "{{host}}/api/pendencias/{{last_pendencia_id}}",
        "host": ["{{host}}"],
        "path": ["api", "pendencias", "{{last_pendencia_id}}"]
      },
      "description": "Atualizar uma pendência existente."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta contém dados atualizados\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(responseJson).to.have.property('resolvida');",
            "    pm.expect(responseJson.resolvida).to.equal(true);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Excluir Pendência",
    "request": {
      "method": "DELETE",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/pendencias/{{last_pendencia_id}}",
        "host": ["{{host}}"],
        "path": ["api", "pendencias", "{{last_pendencia_id}}"]
      },
      "description": "Excluir uma pendência existente (requer role ADMIN)."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 204\", function () {",
            "    pm.response.to.have.status(204);",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Pendências por Conformidade",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/pendencias/conformidade/{{last_conformidade_id}}",
        "host": ["{{host}}"],
        "path": ["api", "pendencias", "conformidade", "{{last_conformidade_id}}"]
      },
      "description": "Buscar pendências por conformidade."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta é um array de pendências\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(Array.isArray(responseJson)).to.be.true;",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Pendências por Status",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/pendencias/status/false",
        "host": ["{{host}}"],
        "path": ["api", "pendencias", "status", "false"]
      },
      "description": "Buscar pendências por status de resolução."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta é um array de pendências\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(Array.isArray(responseJson)).to.be.true;",
            "});"
          ]
        }
      }
    ]
  },
  {
    "name": "Buscar Pendências Vencidas",
    "request": {
      "method": "GET",
      "header": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "url": {
        "raw": "{{host}}/api/pendencias/vencidas?data=2025-12-31",
        "host": ["{{host}}"],
        "path": ["api", "pendencias", "vencidas"],
        "query": [
          {
            "key": "data",
            "value": "2025-12-31"
          }
        ]
      },
      "description": "Buscar pendências vencidas até uma data específica."
    },
    "response": [],
    "event": [
      {
        "listen": "test",
        "script": {
          "type": "text/javascript",
          "exec": [
            "pm.test(\"Status code é 200\", function () {",
            "    pm.response.to.have.status(200);",
            "});",
            "",
            "pm.test(\"Resposta é um array de pendências\", function () {",
            "    var responseJson = pm.response.json();",
            "    pm.expect(Array.isArray(responseJson)).to.be.true;",
            "});"
          ]
        }
      }
    ]
  }
]
